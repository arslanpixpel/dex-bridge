/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RootChainManager,
  RootChainManagerInterface,
} from "../RootChainManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ETHER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAPPER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE_UPDATER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "childToRootToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
    ],
    name: "cleanMapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdUser",
        type: "bytes32",
      },
    ],
    name: "depositEtherFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdUser",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
    ],
    name: "hashChild",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "mapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previousMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "registerVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "remapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rootToChildToken",
    outputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "subindex",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDepositFee",
        type: "uint256",
      },
    ],
    name: "setDepositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newStateSender",
        type: "address",
      },
    ],
    name: "setStateSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasurer",
        type: "address",
      },
    ],
    name: "setTreasurer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newWithdrawFee",
        type: "uint256",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSenderAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenToType",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasurer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "typeToVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "ccdIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "ccdSubIndex",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "ccdTxHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "ccdEventIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "tokenId",
            type: "uint64",
          },
        ],
        internalType: "struct IRootChainManager.WithdrawParams",
        name: "withdrawParam",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061253e806100206000396000f3fe6080604052600436106102295760003560e01c80636f3cde1f11610123578063cf1d21c0116100ab578063ea60c7c41161006f578063ea60c7c414610717578063f0471dc014610778578063f57663d114610798578063fda49eb4146107ab578063ff57e1d8146107cb57600080fd5b8063cf1d21c01461066e578063d547741f14610696578063e2c49de1146106b6578063e43009a6146106d4578063e941fa781461070157600080fd5b8063ab14248e116100f2578063ab14248e14610594578063b6ac642a146105e2578063c4d66de814610602578063c85d263114610622578063caf3791e1461065857600080fd5b80636f3cde1f1461051f5780637cb647591461053f57806391d148541461055f578063a217fddf1461057f57600080fd5b8063490ae210116101b15780635c975abb116101755780635c975abb1461047f578063607f2d4214610499578063671d6429146104c957806367a52793146104e95780636cb136b0146104ff57600080fd5b8063490ae210146103e3578063495906571461040357806352174ca914610418578063568b80b514610438578063594986a41461046c57600080fd5b8063286f8c74116101f8578063286f8c74146103395780632eb4a7ab146103595780632f2ff15d1461036f57806336568abe1461038f5780633e9e3e73146103af57600080fd5b806301ffc9a7146102935780630bbfae05146102c857806316c38b3c146102db578063248a9ca3146102fb57600080fd5b3661028e5760405162461bcd60e51b815260206004820152602860248201527f526f6f74436861696e4d616e616765723a206e6f2064697265637420455448206044820152676465706f7369747360c01b60648201526084015b60405180910390fd5b005b600080fd5b34801561029f57600080fd5b506102b36102ae366004611eb4565b6107eb565b60405190151581526020015b60405180910390f35b61028c6102d6366004611ede565b610822565b3480156102e757600080fd5b5061028c6102f6366004611f6c565b610cca565b34801561030757600080fd5b5061032b610316366004611f8e565b6000908152600d602052604090206001015490565b6040519081526020016102bf565b34801561034557600080fd5b5061028c610354366004611fbc565b610ce9565b34801561036557600080fd5b5061032b60075481565b34801561037b57600080fd5b5061028c61038a366004611fbc565b610d82565b34801561039b57600080fd5b5061028c6103aa366004611fbc565b610dac565b3480156103bb57600080fd5b5061032b7f71e7a05257c6e1a8458eede759a6478098f83525a01219cdc0e74ef32e36a77381565b3480156103ef57600080fd5b5061028c6103fe366004611f8e565b610e2a565b34801561040f57600080fd5b5060075461032b565b34801561042457600080fd5b5061028c610433366004612008565b610e3b565b34801561044457600080fd5b5061032b7f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c60777781565b61028c61047a36600461204d565b610f4a565b34801561048b57600080fd5b50600c546102b39060ff1681565b3480156104a557600080fd5b506102b36104b4366004611f8e565b60056020526000908152604090205460ff1681565b3480156104d557600080fd5b5061028c6104e43660046120eb565b611064565b3480156104f557600080fd5b5061032b600a5481565b34801561050b57600080fd5b5061028c61051a3660046120eb565b611102565b34801561052b57600080fd5b5061028c61053a366004612108565b6111a2565b34801561054b57600080fd5b5061028c61055a366004611f8e565b611280565b34801561056b57600080fd5b506102b361057a366004611fbc565b61130e565b34801561058b57600080fd5b5061032b600081565b3480156105a057600080fd5b506105ca6105af366004611f8e565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102bf565b3480156105ee57600080fd5b5061028c6105fd366004611f8e565b611339565b34801561060e57600080fd5b5061028c61061d3660046120eb565b61134a565b34801561062e57600080fd5b506105ca61063d366004611f8e565b6001602052600090815260409020546001600160a01b031681565b34801561066457600080fd5b5061032b60085481565b34801561067a57600080fd5b506105ca73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3480156106a257600080fd5b5061028c6106b1366004611fbc565b6114ad565b3480156106c257600080fd5b506006546001600160a01b03166105ca565b3480156106e057600080fd5b5061032b6106ef3660046120eb565b60046020526000908152604090205481565b34801561070d57600080fd5b5061032b600b5481565b34801561072357600080fd5b506107586107323660046120eb565b6002602052600090815260409020546001600160401b0380821691600160401b90041682565b604080516001600160401b039384168152929091166020830152016102bf565b34801561078457600080fd5b5061028c610793366004612108565b6114d2565b61028c6107a6366004612155565b611648565b3480156107b757600080fd5b506009546105ca906001600160a01b031681565b3480156107d757600080fd5b5061032b6107e6366004612181565b6116b8565b60006001600160e01b03198216637965db0b60e01b148061081c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600c5460ff16156108455760405162461bcd60e51b8152600401610283906121b4565b600b543410156108bd5760405162461bcd60e51b815260206004820152603b60248201527f526f6f74436861696e4d616e616765723a204554482073656e64206e6565647360448201527f20746f206265206174206c6561737420776974686472617746656500000000006064820152608401610283565b600b54156108d0576108d0600b546116fd565b60006108df60208501856121f6565b6108ef60408601602087016121f6565b604086013561090460808801606089016120eb565b608088013561091960c08a0160a08b016121f6565b61092960e08b0160c08c016121f6565b60405160200161093f9796959493929190612211565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff16156109c85760405162461bcd60e51b815260206004820152602860248201527f526f6f74436861696e4d616e616765723a206578697420616c726561647920706044820152671c9bd8d95cdcd95960c21b6064820152608401610283565b610a09838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506007549150849050611737565b80610a505750610a50838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506008549150849050611737565b610ac25760405162461bcd60e51b815260206004820152603760248201527f526f6f74436861696e4d616e616765723a207472616e73616374696f6e20707260448201527f6f6f6620766572696669636174696f6e206661696c65640000000000000000006064820152608401610283565b60008181526005602090815260408220805460ff19166001179055610afd90610aed908701876121f6565b6107e660408801602089016121f6565b6000818152600360205260409020549091506001600160a01b031680610b355760405162461bcd60e51b815260040161028390612259565b6001600160a01b03808216600090815260046020908152604080832054835260019091529020541680638468b27a610b7360808a0160608b016120eb565b84610b8460e08c0160c08d016121f6565b604080516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526001600160401b031660448301528a01356064820152608401600060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b50506006546001600160a01b0316915063325f4a4a9050610c1d60208a018a6121f6565b610c2d60408b0160208c016121f6565b60408b0135610c4260808d0160608e016120eb565b8c608001358d60a0016020810190610c5a91906121f6565b8e60c0016020810190610c6d91906121f6565b6040518863ffffffff1660e01b8152600401610c8f9796959493929190612211565b600060405180830381600087803b158015610ca957600080fd5b505af1158015610cbd573d6000803e3d6000fd5b5050505050505050505050565b6000610cd58161174d565b50600c805460ff1916911515919091179055565b6000610cf48161174d565b6000838152600160205260409081902080546001600160a01b0319166001600160a01b038581169182179092556006549251633001397d60e01b8152600481018790526024810191909152911690633001397d90604401600060405180830381600087803b158015610d6557600080fd5b505af1158015610d79573d6000803e3d6000fd5b50505050505050565b6000828152600d6020526040902060010154610d9d8161174d565b610da7838361175a565b505050565b6001600160a01b0381163314610e1c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610283565b610e2682826117e0565b5050565b6000610e358161174d565b50600a55565b6000610e468161174d565b6000610e5284846116b8565b604080518082018252600080825260208083018281526001600160a01b038b8116808552600284528685209551865493516001600160401b03908116600160401b026001600160801b031990951691811691909117939093179095558684526003835285842080546001600160a01b03191690558484526004928390528584208490556006549551634b898fdf60e11b815292830194909452898116602483015288166044820152606481019190915292935016906397131fbe906084015b600060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050505050505050565b600c5460ff1615610f6d5760405162461bcd60e51b8152600401610283906121b4565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03841601610fe65760405162461bcd60e51b8152602060048201526024808201527f526f6f74436861696e4d616e616765723a20696e76616c696420726f6f74207460448201526337b5b2b760e11b6064820152608401610283565b600a543410156110085760405162461bcd60e51b81526004016102839061229b565b600a541561101b5761101b600a546116fd565b61105d85858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061184792505050565b5050505050565b600061106f8161174d565b6001600160a01b0382166110df5760405162461bcd60e51b815260206004820152603160248201527f526f6f74436861696e4d616e616765723a207472656173757265722063616e206044820152706e6f74206265206164647265737328302960781b6064820152608401610283565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b600061110d8161174d565b6001600160a01b03821661117f5760405162461bcd60e51b815260206004820152603360248201527f526f6f74436861696e4d616e616765723a20737461746553656e6465722063616044820152726e206e6f74206265206164647265737328302960681b6064820152608401610283565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b7f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c6077776111cc8161174d565b60006111d885856116b8565b6001600160a01b0387166000908152600260205260409020549091506001600160401b031615801561121f57506000818152600360205260409020546001600160a01b0316155b61126b5760405162461bcd60e51b815260206004820181905260248201527f526f6f74436861696e4d616e616765723a20616c7265616479206d61707065646044820152606401610283565b6112788682878787611a3d565b505050505050565b7f71e7a05257c6e1a8458eede759a6478098f83525a01219cdc0e74ef32e36a7736112aa8161174d565b600780546008558290556006546040516338835bcb60e01b8152600481018490526001600160a01b03909116906338835bcb90602401600060405180830381600087803b1580156112fa57600080fd5b505af1158015611278573d6000803e3d6000fd5b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006113448161174d565b50600b55565b600054610100900460ff161580801561136a5750600054600160ff909116105b806113845750303b158015611384575060005460ff166001145b6113e75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610283565b6000805460ff19166001179055801561140a576000805461ff0019166101001790555b611415600083611b79565b61143f7f2559c73ad5e64226de134fc607a00e9f0c0b7465b43c2ae69baaca347c60777783611b79565b600980546001600160a01b0319166001600160a01b038416179055600c805460ff191690558015610e26576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000828152600d60205260409020600101546114c88161174d565b610da783836117e0565b60006114dd8161174d565b60006114e985856116b8565b6001600160a01b03871660009081526002602090815260408083208151808301909252546001600160401b03808216808452600160401b9092041692820183905293945092611537916116b8565b6000848152600360209081526040808320546001600160a01b0316808452600290925290912054919250906001600160401b031615158061159f57506001600160a01b038116600090815260026020526040902054600160401b90046001600160401b031615155b1561160157604080518082018252600080825260208083018281526001600160a01b0386168352600282528483209351845491516001600160401b03908116600160401b026001600160801b0319909316911617179092556004909152908120555b6000828152600360205260409020546001600160a01b03161561163b57600082815260036020526040902080546001600160a01b03191690555b610f3f89858a8a8a611a3d565b600c5460ff161561166b5760405162461bcd60e51b8152600401610283906121b4565b600a5434101561168d5760405162461bcd60e51b81526004016102839061229b565b600a54156116a0576116a0600a546116fd565b610e268282600a54346116b3919061230e565b611b83565b6040516001600160c01b031960c084811b8216602084015283901b16602882015260009060300160405160208183030381529060405280519060200120905092915050565b6009546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015610e26573d6000803e3d6000fd5b6000826117448584611c2f565b14949350505050565b6117578133611c7c565b50565b611764828261130e565b610e26576000828152600d602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561179c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117ea828261130e565b15610e26576000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0382166000908152600460209081526040808320546002909252909120546001600160401b03161580159061188257508015155b61189e5760405162461bcd60e51b815260040161028390612259565b6000818152600160205260409020546001600160a01b03168061190f5760405162461bcd60e51b8152602060048201526024808201527f526f6f74436861696e4d616e616765723a20696e76616c696420746f6b656e206044820152637479706560e01b6064820152608401610283565b6001600160a01b0386166119655760405162461bcd60e51b815260206004820152601e60248201527f526f6f74436861696e4d616e616765723a20696e76616c6964207573657200006044820152606401610283565b60405163c6aafd7560e01b81526001600160a01b0382169063c6aafd75906119999033908a908a908a908a90600401612371565b600060405180830381600087803b1580156119b357600080fd5b505af11580156119c7573d6000803e3d6000fd5b5050600654604051631fe194a560e11b81526001600160a01b039091169250633fc3294a9150611a039089908990899087908a906004016123b7565b600060405180830381600087803b158015611a1d57600080fd5b505af1158015611a31573d6000803e3d6000fd5b50505050505050505050565b6000818152600160205260409020546001600160a01b0316611ab45760405162461bcd60e51b815260206004820152602a60248201527f526f6f74436861696e4d616e616765723a206e6f7420737570706f7274656420604482015269746f6b656e207479706560b01b6064820152608401610283565b6040805180820182526001600160401b0385811680835285821660208085018281526001600160a01b038c81166000818152600285528981209851895494518916600160401b026001600160801b0319909516981697909717929092179096558a85526003825286852080546001600160a01b03191682179055808552600491829052938690208790556006549551631c3a2f8b60e11b81529081019390935260248301919091526044820152606481018490529116906338745f1690608401610f11565b610e26828261175a565b600081604051602001611b9891815260200190565b6040516020818303038152906040529050611bc9848473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84611847565b7ff0f2fe64297d6f5ba18daddd165143adda9d1be31e3172fbca589ee2e039f82b546000908152600160205260408082205490516001600160a01b03909116916108fc851502918591818181858888f1935050505015801561105d573d6000803e3d6000fd5b600081815b8451811015611c7457611c6082868381518110611c5357611c536123f2565b6020026020010151611cd5565b915080611c6c81612408565b915050611c34565b509392505050565b611c86828261130e565b610e2657611c9381611d07565b611c9e836020611d19565b604051602001611caf929190612421565b60408051601f198184030181529082905262461bcd60e51b825261028391600401612496565b6000818310611cf1576000828152602084905260409020611d00565b60008381526020839052604090205b9392505050565b606061081c6001600160a01b03831660145b60606000611d288360026124a9565b611d339060026124c8565b6001600160401b03811115611d4a57611d4a6124db565b6040519080825280601f01601f191660200182016040528015611d74576020820181803683370190505b509050600360fc1b81600081518110611d8f57611d8f6123f2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611dbe57611dbe6123f2565b60200101906001600160f81b031916908160001a9053506000611de28460026124a9565b611ded9060016124c8565b90505b6001811115611e65576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611e2157611e216123f2565b1a60f81b828281518110611e3757611e376123f2565b60200101906001600160f81b031916908160001a90535060049490941c93611e5e816124f1565b9050611df0565b508315611d005760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610283565b600060208284031215611ec657600080fd5b81356001600160e01b031981168114611d0057600080fd5b6000806000838503610100811215611ef557600080fd5b60e0811215611f0357600080fd5b5083925060e08401356001600160401b0380821115611f2157600080fd5b818601915086601f830112611f3557600080fd5b813581811115611f4457600080fd5b8760208260051b8501011115611f5957600080fd5b6020830194508093505050509250925092565b600060208284031215611f7e57600080fd5b81358015158114611d0057600080fd5b600060208284031215611fa057600080fd5b5035919050565b6001600160a01b038116811461175757600080fd5b60008060408385031215611fcf57600080fd5b823591506020830135611fe181611fa7565b809150509250929050565b80356001600160401b038116811461200357600080fd5b919050565b60008060006060848603121561201d57600080fd5b833561202881611fa7565b925061203660208501611fec565b915061204460408501611fec565b90509250925092565b60008060008060006080868803121561206557600080fd5b853561207081611fa7565b945060208601359350604086013561208781611fa7565b925060608601356001600160401b03808211156120a357600080fd5b818801915088601f8301126120b757600080fd5b8135818111156120c657600080fd5b8960208285010111156120d857600080fd5b9699959850939650602001949392505050565b6000602082840312156120fd57600080fd5b8135611d0081611fa7565b6000806000806080858703121561211e57600080fd5b843561212981611fa7565b935061213760208601611fec565b925061214560408601611fec565b9396929550929360600135925050565b6000806040838503121561216857600080fd5b823561217381611fa7565b946020939093013593505050565b6000806040838503121561219457600080fd5b61219d83611fec565b91506121ab60208401611fec565b90509250929050565b60208082526022908201527f526f6f74436861696e4d616e616765723a206272696467652069732070617573604082015261195960f21b606082015260800190565b60006020828403121561220857600080fd5b611d0082611fec565b6001600160401b039788168152958716602087015260408601949094526001600160a01b039290921660608501526080840152831660a083015290911660c082015260e00190565b60208082526022908201527f526f6f74436861696e4d616e616765723a20746f6b656e206e6f74206d617070604082015261195960f21b606082015260800190565b6020808252603a908201527f526f6f74436861696e4d616e616765723a204554482073656e64206e6565647360408201527f20746f206265206174206c65617374206465706f736974466565000000000000606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561081c5761081c6122f8565b60005b8381101561233c578181015183820152602001612324565b50506000910152565b6000815180845261235d816020860160208601612321565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528581166020830152604082018590528316606082015260a0608082018190526000906123ac90830184612345565b979650505050505050565b6001600160a01b0386811682526020820186905284811660408301528316606082015260a0608082018190526000906123ac90830184612345565b634e487b7160e01b600052603260045260246000fd5b60006001820161241a5761241a6122f8565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612459816017850160208801612321565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161248a816028840160208801612321565b01602801949350505050565b602081526000611d006020830184612345565b60008160001904831182151516156124c3576124c36122f8565b500290565b8082018082111561081c5761081c6122f8565b634e487b7160e01b600052604160045260246000fd5b600081612500576125006122f8565b50600019019056fea264697066735822122049aace9e3690ca72d69279f8a887f3e2d7915620363c794bb10a0023d1852dfe64736f6c63430008100033";

type RootChainManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootChainManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootChainManager__factory extends ContractFactory {
  constructor(...args: RootChainManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RootChainManager";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RootChainManager> {
    return super.deploy(overrides || {}) as Promise<RootChainManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RootChainManager {
    return super.attach(address) as RootChainManager;
  }
  connect(signer: Signer): RootChainManager__factory {
    return super.connect(signer) as RootChainManager__factory;
  }
  static readonly contractName: "RootChainManager";
  public readonly contractName: "RootChainManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootChainManagerInterface {
    return new utils.Interface(_abi) as RootChainManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootChainManager {
    return new Contract(address, _abi, signerOrProvider) as RootChainManager;
  }
}
