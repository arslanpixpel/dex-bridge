/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockErc20, MockErc20Interface } from "../MockErc20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimalsValue",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051806040016040528060048152602001634d4f434b60e01b815250604051806040016040528060028152602001614d4f60f01b81525081600390816100589190610119565b5060046100658282610119565b50506005805460ff19166012179055506101d8565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a457607f821691505b6020821081036100c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011457600081815260208120601f850160051c810160208610156100f15750805b601f850160051c820191505b81811015610110578281556001016100fd565b5050505b505050565b81516001600160401b038111156101325761013261007a565b610146816101408454610090565b846100ca565b602080601f83116001811461017b57600084156101635750858301515b600019600386901b1c1916600185901b178555610110565b600085815260208120601f198616915b828110156101aa5788860151825594840194600190910190840161018b565b50858210156101c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109a7806101e76000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101c4578063a457c2d7146101cc578063a9059cbb146101df578063dd62ed3e146101f257600080fd5b806340c10f191461016257806370a08231146101775780637a1395aa146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc610205565b6040516100e991906107ce565b60405180910390f35b610105610100366004610838565b610297565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610862565b6102b1565b60055460405160ff90911681526020016100e9565b61010561015d366004610838565b6102d5565b610175610170366004610838565b6102f7565b005b61011961018536600461089e565b6001600160a01b031660009081526020819052604090205490565b6101756101ae3660046108c0565b6005805460ff191660ff92909216919091179055565b6100dc610305565b6101056101da366004610838565b610314565b6101056101ed366004610838565b610394565b6101196102003660046108e3565b6103a2565b60606003805461021490610916565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610916565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b5050505050905090565b6000336102a58185856103cd565b60019150505b92915050565b6000336102bf8582856104f1565b6102ca85858561056b565b506001949350505050565b6000336102a58185856102e883836103a2565b6102f29190610950565b6103cd565b610301828261070f565b5050565b60606004805461021490610916565b6000338161032282866103a2565b9050838110156103875760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ca82868684036103cd565b6000336102a581858561056b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661042f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161037e565b6001600160a01b0382166104905760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161037e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104fd84846103a2565b9050600019811461056557818110156105585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161037e565b61056584848484036103cd565b50505050565b6001600160a01b0383166105cf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161037e565b6001600160a01b0382166106315760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161037e565b6001600160a01b038316600090815260208190526040902054818110156106a95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161037e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610565565b6001600160a01b0382166107655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161037e565b80600260008282546107779190610950565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156107fb578581018301518582016040015282016107df565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461083357600080fd5b919050565b6000806040838503121561084b57600080fd5b6108548361081c565b946020939093013593505050565b60008060006060848603121561087757600080fd5b6108808461081c565b925061088e6020850161081c565b9150604084013590509250925092565b6000602082840312156108b057600080fd5b6108b98261081c565b9392505050565b6000602082840312156108d257600080fd5b813560ff811681146108b957600080fd5b600080604083850312156108f657600080fd5b6108ff8361081c565b915061090d6020840161081c565b90509250929050565b600181811c9082168061092a57607f821691505b60208210810361094a57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ab57634e487b7160e01b600052601160045260246000fdfea264697066735822122053ba242fd4306a89dc05723265f28a356b1481dcb5c68bf9bb4793224974098c64736f6c63430008100033";

type MockErc20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockErc20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockErc20__factory extends ContractFactory {
  constructor(...args: MockErc20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockErc20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockErc20> {
    return super.deploy(overrides || {}) as Promise<MockErc20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockErc20 {
    return super.attach(address) as MockErc20;
  }
  connect(signer: Signer): MockErc20__factory {
    return super.connect(signer) as MockErc20__factory;
  }
  static readonly contractName: "MockErc20";
  public readonly contractName: "MockErc20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockErc20Interface {
    return new utils.Interface(_abi) as MockErc20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockErc20 {
    return new Contract(address, _abi, signerOrProvider) as MockErc20;
  }
}
