/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EtherVault, EtherVaultInterface } from "../EtherVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "exitor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ExitedEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depositReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositCcdReceiver",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LockedEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_TYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "userWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "exitTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "address",
        name: "depositReceiver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "depositCcdReceiver",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "lockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c53806100206000396000f3fe6080604052600436106100ab5760003560e01c806391d148541161006457806391d14854146101d7578063a217fddf146101f7578063c4d66de81461020c578063c6aafd751461022c578063d547741f1461024c578063ec87621c1461026c57600080fd5b806301ffc9a7146100cf578063248a9ca3146101045780632f2ff15d1461014357806336568abe14610163578063609c92b8146101835780638468b27a146101b757600080fd5b366100ca57600080516020610bfe8339815191526100c88161028e565b005b600080fd5b3480156100db57600080fd5b506100ef6100ea366004610908565b61029b565b60405190151581526020015b60405180910390f35b34801561011057600080fd5b5061013561011f366004610932565b6000908152600160208190526040909120015490565b6040519081526020016100fb565b34801561014f57600080fd5b506100c861015e366004610960565b6102d2565b34801561016f57600080fd5b506100c861017e366004610960565b6102fd565b34801561018f57600080fd5b506101357fa234e09165f88967a714e2a476288e4c6d88b4b69fe7c300a03190b858990bfc81565b3480156101c357600080fd5b506100c86101d2366004610990565b610380565b3480156101e357600080fd5b506100ef6101f2366004610960565b610419565b34801561020357600080fd5b50610135600081565b34801561021857600080fd5b506100c86102273660046109d6565b610444565b34801561023857600080fd5b506100c86102473660046109f3565b610570565b34801561025857600080fd5b506100c8610267366004610960565b6105f8565b34801561027857600080fd5b50610135600080516020610bfe83398151915281565b610298813361061e565b50565b60006001600160e01b03198216637965db0b60e01b14806102cc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260016020819052604090912001546102ee8161028e565b6102f88383610677565b505050565b6001600160a01b03811633146103725760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61037c82826106e2565b5050565b600080516020610bfe8339815191526103988161028e565b6040516001600160a01b0386169083156108fc029084906000818181858888f193505050501580156103ce573d6000803e3d6000fd5b50846001600160a01b03167f0fc0eed41f72d3da77d0f53b9594fc7073acd15ee9d7c536819a70a67c57ef3c8360405161040a91815260200190565b60405180910390a25050505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff16158080156104645750600054600160ff909116105b8061047e5750303b15801561047e575060005460ff166001145b6104e15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610369565b6000805460ff191660011790558015610504576000805461ff0019166101001790555b61050f600083610749565b610527600080516020610bfe83398151915283610749565b801561037c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600080516020610bfe8339815191526105888161028e565b600061059683850185610932565b9050866001600160a01b0316886001600160a01b03167f348a292983b78fd48d69f1184950f831d3baa5621a5f29985ffe489c379f9c8388846040516105e6929190918252602082015260400190565b60405180910390a35050505050505050565b600082815260016020819052604090912001546106148161028e565b6102f883836106e2565b6106288282610419565b61037c5761063581610753565b610640836020610765565b604051602001610651929190610aca565b60408051601f198184030181529082905262461bcd60e51b825261036991600401610b3f565b6106818282610419565b61037c5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6106ec8282610419565b1561037c5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61037c8282610677565b60606102cc6001600160a01b03831660145b60606000610774836002610b88565b61077f906002610ba7565b67ffffffffffffffff81111561079757610797610bba565b6040519080825280601f01601f1916602001820160405280156107c1576020820181803683370190505b509050600360fc1b816000815181106107dc576107dc610bd0565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061080b5761080b610bd0565b60200101906001600160f81b031916908160001a905350600061082f846002610b88565b61083a906001610ba7565b90505b60018111156108b2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061086e5761086e610bd0565b1a60f81b82828151811061088457610884610bd0565b60200101906001600160f81b031916908160001a90535060049490941c936108ab81610be6565b905061083d565b5083156109015760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610369565b9392505050565b60006020828403121561091a57600080fd5b81356001600160e01b03198116811461090157600080fd5b60006020828403121561094457600080fd5b5035919050565b6001600160a01b038116811461029857600080fd5b6000806040838503121561097357600080fd5b8235915060208301356109858161094b565b809150509250929050565b600080600080608085870312156109a657600080fd5b84356109b18161094b565b935060208501356109c18161094b565b93969395505050506040820135916060013590565b6000602082840312156109e857600080fd5b81356109018161094b565b60008060008060008060a08789031215610a0c57600080fd5b8635610a178161094b565b95506020870135610a278161094b565b9450604087013593506060870135610a3e8161094b565b9250608087013567ffffffffffffffff80821115610a5b57600080fd5b818901915089601f830112610a6f57600080fd5b813581811115610a7e57600080fd5b8a6020828501011115610a9057600080fd5b6020830194508093505050509295509295509295565b60005b83811015610ac1578181015183820152602001610aa9565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610b02816017850160208801610aa6565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b33816028840160208801610aa6565b01602801949350505050565b6020815260008251806020840152610b5e816040850160208701610aa6565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610ba257610ba2610b72565b500290565b808201808211156102cc576102cc610b72565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610bf557610bf5610b72565b50600019019056fe241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08a2646970667358221220864a33ae39ad05a41301a67262b5553fa1969b9aa8f80532707c0e2d60e2fc1e64736f6c63430008100033";

type EtherVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EtherVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EtherVault__factory extends ContractFactory {
  constructor(...args: EtherVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EtherVault";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EtherVault> {
    return super.deploy(overrides || {}) as Promise<EtherVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EtherVault {
    return super.attach(address) as EtherVault;
  }
  connect(signer: Signer): EtherVault__factory {
    return super.connect(signer) as EtherVault__factory;
  }
  static readonly contractName: "EtherVault";
  public readonly contractName: "EtherVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherVaultInterface {
    return new utils.Interface(_abi) as EtherVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherVault {
    return new Contract(address, _abi, signerOrProvider) as EtherVault;
  }
}
