/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IStateSender, IStateSenderInterface } from "../IStateSender";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositReceiver",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "LockedToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "MerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "TokenMapAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "TokenMapRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "VaultRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "ccdIndex",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "ccdSubIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "ccdTxHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ccdEventIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "tokenId",
        type: "uint64",
      },
    ],
    name: "WithdrawEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "userCCd",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "emitDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "emitMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "emitTokenMapAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "childTokenIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "childTokenSubIndex",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
    ],
    name: "emitTokenMapRemove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "emitVaultRegistered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "ccdIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "ccdSubIndex",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userWallet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ccdTxHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "ccdEventIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "tokenId",
        type: "uint64",
      },
    ],
    name: "emitWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStateSender__factory {
  static readonly abi = _abi;
  static createInterface(): IStateSenderInterface {
    return new utils.Interface(_abi) as IStateSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStateSender {
    return new Contract(address, _abi, signerOrProvider) as IStateSender;
  }
}
